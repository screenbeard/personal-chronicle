{"name":"Ben","date":1250087280,"url":"","message":"The most common storage for floating-point values in programming languages - IEEE singles and doubles - does not have exact representations for most decimal fractions.\n\nThe reason is that they store values in binary floating-point format, rather than decimal floating-point format. The only fractional values which can be represented exactly are those which are sums of negative powers of two. Numbers like:\n\n    * 0.5 (2^-1)\n    * 0.125 (2^-3)\n    * 0.625 (2^-1 + 2^-3)\n\nEtc.\n\nWhat you are seeing is the fact that representations of numbers like 0.96 are not exactly representable, because they are not expressible as a sum of negative powers of two. Thus, when printed out with full precision as a decimal fraction, they won't match the original value.\n\n\n*Borrowed from Stack Overflow","email":"7c2c98b351858df0b081f17707eff5c9","_id":"091aacf0-4334-11e9-8045-d7c0bfa97458"}